package main

import (
	"fmt"
	"regexp"
	"strings"
)

var test = []string{
	"123.............458...689.556..3............197......582........720.........................515..352..286.........670.741.....895.626....321",
	"...910.743..........................13..........................*.............775...956........@.........*................971.-.............",
	"....*......406.507.97..846..............968+.........253........730...574............#....308......*.....798..............*.......894.......",
	"....555...............*......%...............980.+43..=..239..........*......495................638.111.........*490...124...*........576...",
	".............807......176.....820...=.........*.........@................144*...........324..............82..745............775.............",
	"...509.../..../...85/......9.........574....744....586....../..796................763...............................759............#........",
	".....*...541...................930%................*.....831............494...44........799.....................870*.......834.215.675......",
	".....23..................391.........17.......500..329.................+.....*......................431.....................-...........19..",
	"........................#.............*.704+./..................................152............=61....................668..............*....",
	"........894....334.............766.817.........302.-367.663......670.....+..........628..............592..................652......130..885.",
}
var testKlein = []string{
	"467..114..",
	"...*......",
	"..35..633.",
	"......#...",
	"617*......",
	".....+.58.",
	"..592.....",
	"......755.",
	"...$.*....",
	".664.598..",
}

// Z1: 515 720 286 895
// Z2: 910 956 971
// Z3: 846 968 253 730 574 798 971
// Z4: 555 980 43 495 638 111 490
// Z5:
func tag3() int {
	summe := 0
	reg := regexp.MustCompile(`\d+`)

	txt := test // splitFile("tag3.txt")
	linedigits := [][]string{}
	for _, line := range txt {
		digtits := reg.FindAllString(line, -1)
		linedigits = append(linedigits, digtits)
	}

	var io []string
	for i, line := range linedigits {
		if len(line) > 0 {
			for _, digit := range line {
				str := fmt.Sprintf(".%s.", digit)
				pos := strings.Index(txt[i], str)
				if pos == -1 {
					pos := strings.Index(txt)
				}
				// var char byte
				fmt.Println(pos, digit)
			}
		}
	}
	fmt.Println(io)
	summe = sumString(io)
	return summe
}
